version: '3.8'

services:

  mongodb:
    container_name: testy-mongodb
    image: docker.io/library/mongo:latest
    networks:
      - lila-network
    ports: 
      - "127.0.0.1:37017:27017"
    volumes:
      - ../database:/data/db
    restart: "unless-stopped"

  redis:
    container_name: testy-redis
    image: docker.io/library/redis:alpine
    networks:
      - lila-network
    restart: "unless-stopped"

  picfit:
    container_name: testy-picfit
    image: docker.io/thoas/picfit:0.9.0
    working_dir: /etc/picfit
    networks:
      - lila-network
    ports:
      - "127.0.0.1:13001:3001"
    volumes:
      - ../picfit:/etc/picfit
      - .:/config
    restart: "no"
    entrypoint: /picfit --config /config/picfit.json

  lila:
    container_name: testy-lila
    image: docker.io/library/eclipse-temurin:21
    working_dir: /app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9663"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - lila-network
    ports:
      - "127.0.0.1:19663:9663"
    volumes:
      - ../deploy:/app
      - .:/config
      - /etc/lichess-stage.logger.xml:/app/conf/logger.dev.xml
    restart: "no"
    entrypoint: bin/lila -Dconfig.file=/config/application.conf -Dlogback.configuration=

  lila_fishnet:
    container_name: testy-lila-fishnet
    image: ghcr.io/lichess-org/lila-fishnet:latest
    working_dir: /app
    depends_on:
      lila:
        condition: service_healthy
    networks:
      - lila-network
    volumes:
      - ..:/app
    restart: "no"
    command: ["-Dredis.uri=redis://redis"]

  lila_ws:
    container_name: testy-lila-ws
    image: ghcr.io/lichess-org/lila-ws:latest
    working_dir: /app
    networks:
      - lila-network
    ports:
      - "127.0.0.1:19664:9664"
    volumes:
      - ..:/app
    restart: "no"
    command: ["-Dmongo.uri=mongodb://mongodb", "-Dredis.uri=redis://redis", "-Dcsrf.origin=https://testy.lichess.dev", "-Dcookie.name=testy"]

  fishnet:
    container_name: testy-fishnet
    image: docker.io/niklasf/fishnet
    networks:
      - lila-network
    restart: "no"
    entrypoint: /fishnet --endpoint http://lila:9663/fishnet --max-backoff 3

  fishnet-vs:
    container_name: testy-fishnet-vs
    image: docker.io/niklasf/fishnet
    networks:
      - lila-network
    restart: "no"
    entrypoint: /fishnet --endpoint http://lila_fishnet:9665/fishnet --max-backoff 3

networks:
  lila-network:
    driver: bridge
